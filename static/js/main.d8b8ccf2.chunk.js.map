{"version":3,"sources":["Components/Profile.jsx","Components/Repo.js","App.js","Hooks/UseGithubUser.js","index.js"],"names":["Profile","name","image","bio","src","size","Repo","description","html_url","watchers_count","padding","border","boxShadow","borderRadius","as","isExternal","href","App","useState","valid","setValid","username","setusername","user","setUser","repos","setRepos","getUser","a","fetch","then","res","json","data","UseGithubUser","theme","minHeight","direction","paddingY","maxWidth","marginX","gridGap","onSubmit","e","preventDefault","alert","placeholder","onChange","target","value","isInvalid","type","colorScheme","align","justify","flex","background","avatar_url","columns","spacing","marginTop","map","repo","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAGe,SAASA,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,IACxC,OACI,eAAC,IAAD,WACA,cAAC,IAAD,UAAK,cAAC,IAAD,CAAQF,KAAMA,EAAMG,IAAKF,EAAOG,KAAK,UACtC,cAAC,IAAD,UAAUJ,IACV,cAAC,IAAD,UAAME,O,YCLH,SAASG,EAAT,GAA2D,IAA5CL,EAA2C,EAA3CA,KAAKM,EAAsC,EAAtCA,YAAYC,EAA0B,EAA1BA,SAASC,EAAiB,EAAjBA,eACpD,OACI,eAAC,IAAD,CAAKC,QAAS,EAAGC,OAAQ,YAAaC,UAAW,8BAA+BC,aAAc,EAA9F,UACI,cAAC,IAAD,CAASC,GAAG,KAAZ,SAAkBb,IAClB,cAAC,IAAD,UAAMM,IACN,cAAC,IAAD,CAAMQ,YAAU,EAACC,KAAMR,EAAvB,uBACA,eAAC,IAAD,WAAMC,EAAN,iBCiCGQ,MArCf,WACE,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,ECNa,SAAuBD,GAClC,MAAoBH,qBAApB,mBAAMK,EAAN,KAAWC,EAAX,KACA,EAAuBN,qBAAvB,mBAAOO,EAAP,KAAaC,EAAb,KAUA,MAAO,CACHH,OACAE,QACAE,QAZS,uCAAC,WAAMN,GAAN,SAAAO,EAAA,sEACJC,MAAM,gCAAD,OAAiCR,IAC3CS,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAI,OAAET,EAAQS,MAHV,uBAKJJ,MAAM,gCAAD,OAAiCR,EAAjC,WACVS,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GAAI,OAAEP,EAASO,MAPX,2CAAD,uDDGkBC,GAAzBX,EAAR,EAAQA,KAAME,EAAd,EAAcA,MAAOE,EAArB,EAAqBA,QAErB,OACE,cAAC,IAAD,CAAgBQ,MAAOA,QAAOC,UAAU,QAAxC,SACE,eAAC,IAAD,CAAMC,UAAU,SAAhB,UACE,cAAC,IAAD,CAAKvB,GAAG,SAAR,SACE,eAAC,IAAD,CAAMA,GAAG,OAAOwB,SAAU,EAAGC,SAAU,IAAKC,QAAQ,OAAOC,QAAS,EAAGC,SAkB/E,SAAsBC,GACpBA,EAAEC,iBACGvB,IACHD,GAAS,GACTyB,MAAM,mBAERlB,EAAQN,IAxBF,UACE,cAAC,IAAD,CAAOyB,YAAY,iBAAiBC,SAAU,SAACJ,GAAD,OAAOrB,EAAYqB,EAAEK,OAAOC,QAAQC,WAAY/B,IAC9F,cAAC,IAAD,CAAQgC,KAAK,SAASC,YAAY,OAAlC,yBAGJ,eAAC,IAAD,CAAMtC,GAAG,OAAOuC,MAAM,SAASC,QAAQ,SAASjB,UAAU,SAASkB,KAAM,EAAGC,WAAW,aAAvF,UAAqGjC,GAAQ,cAACvB,EAAD,CAASC,KAAMsB,EAAKtB,KAAMC,MAAOqB,EAAKkC,WAAYtD,IAAKoB,EAAKpB,MACtKsB,GACC,cAAC,IAAD,CAAYiC,QAAS,EAAGC,QAAS,EAAGC,UAAW,EAA/C,SACGnC,EAAMoC,KAAI,SAAAC,GACT,OAAO,cAACxD,EAAD,eAAuBwD,GAAZA,EAAKC,kBEnBvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d8b8ccf2.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Box,Avatar,Heading} from '@chakra-ui/react'\r\n\r\nexport default function Profile({name,image,bio}) {\r\n    return (\r\n        <Box>\r\n        <Box><Avatar name={name} src={image} size=\"2xl\"/></Box>\r\n            <Heading>{name}</Heading>   \r\n            <Box>{bio}</Box>\r\n        </Box>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Box,Heading,Link} from '@chakra-ui/react'\r\n\r\nexport default function Repo({name,description,html_url,watchers_count}) {\r\n    return (\r\n        <Box padding={3} border={'1px solid'} boxShadow={'0 5px 5px 0 rgba(0,0,0,0.3)'} borderRadius={4}>\r\n            <Heading as=\"h3\">{name}</Heading>\r\n            <Box>{description}</Box>\r\n            <Link isExternal href={html_url}>view repo</Link>\r\n            <Box>{watchers_count}watchers</Box>\r\n        </Box>\r\n    )\r\n}\r\n","import { ChakraProvider, theme, Box, Flex, Input, Button ,SimpleGrid } from '@chakra-ui/react'\r\nimport { useState } from 'react'\r\nimport UseGithubUser from './Hooks/UseGithubUser'\r\nimport Profile from './Components/Profile'\r\nimport Repo from './Components/Repo'\r\nfunction App() {\r\n  const [valid, setValid] = useState(true);\r\n  const [username, setusername] = useState(true);\r\n  const { user, repos, getUser } = UseGithubUser();\r\n\r\n  return (\r\n    <ChakraProvider theme={theme} minHeight='100vh'>\r\n      <Flex direction=\"column\">\r\n        <Box as=\"header\">\r\n          <Flex as=\"form\" paddingY={4} maxWidth={768} marginX=\"auto\" gridGap={4} onSubmit={handleSubmit}>\r\n            <Input placeholder=\"Enter username\" onChange={(e) => setusername(e.target.value)} isInvalid={!valid} />\r\n            <Button type=\"submit\" colorScheme=\"blue\">Search</Button>\r\n          </Flex>\r\n        </Box>\r\n        <Flex as=\"main\" align=\"center\" justify=\"center\" direction=\"column\" flex={1} background=\"whitesmoke\">{user && <Profile name={user.name} image={user.avatar_url} bio={user.bio} />}\r\n          {repos && (\r\n            <SimpleGrid columns={3} spacing={7} marginTop={6}>\r\n              {repos.map(repo => {\r\n                return <Repo key={repo.id}{...repo}/>;\r\n              })}\r\n            </SimpleGrid>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n    </ChakraProvider>\r\n  );\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!username) {\r\n      setValid(false)\r\n      alert(\"Enter username\")\r\n    }\r\n    getUser(username);\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import {useState} from 'react'\r\n\r\nexport default function UseGithubUser(username) {\r\n    const[user,setUser]=useState();\r\n    const [repos,setRepos]=useState();\r\n    const getUser=async username=>{\r\n        await fetch(`https://api.github.com/users/${username}`)\r\n        .then(res=>res.json())\r\n        .then(data=>setUser(data))\r\n\r\n        await fetch(`https://api.github.com/users/${username}/repos`)\r\n        .then(res=>res.json())\r\n        .then(data=>setRepos(data))\r\n    }\r\n    return {\r\n        user,\r\n        repos,\r\n        getUser\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}